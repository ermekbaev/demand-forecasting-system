'use client';

import React, { useState, useEffect } from 'react';
import { ProductCard } from '../components/products/ProductCard';
import { Button } from '../components/ui/Button';
import { Card } from '../components/ui/Card';
// –í src/app/page.tsx –≤ —Å–∞–º–æ–º –Ω–∞—á–∞–ª–µ –ø–æ—Å–ª–µ –¥—Ä—É–≥–∏—Ö –∏–º–ø–æ—Ä—Ç–æ–≤
import { SearchBar } from '../components/search/SearchBar';

// –¢–∏–ø—ã –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–µ–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö API
interface Product {
  slug: string;
  Name: string;
  Price: number;
  imageUrl: string;
  brandName: string;
  colors?: string[];
  sizes?: (string | number)[]
  genders?: string[];
  categoryName?: string;
  originalPrice?: number;
  isNew?: boolean;
  isSale?: boolean;
  rating?: number;
}

interface Category {
  name: string;
  count: number;
  slug: string;
}

// –ò–∫–æ–Ω–∫–∏ —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º
const SearchIcon = ({ size = 20 }: { size?: number }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2.5">
    <circle cx="11" cy="11" r="8"/>
    <path d="m21 21-4.35-4.35"/>
  </svg>
);

const ArrowRightIcon = ({ size = 20 }: { size?: number }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2.5">
    <path d="M5 12h14"/>
    <path d="m12 5 7 7-7 7"/>
  </svg>
);

const TrendingUpIcon = ({ size = 20 }: { size?: number }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2.5">
    <polyline points="22,7 13.5,15.5 8.5,10.5 2,17"/>
    <polyline points="16,7 22,7 22,13"/>
  </svg>
);

const SparklesIcon = ({ size = 20 }: { size?: number }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2.5">
    <path d="m12 3-1.912 5.813a2 2 0 0 1-1.275 1.275L3 12l5.813 1.912a2 2 0 0 1 1.275 1.275L12 21l1.912-5.813a2 2 0 0 1 1.275-1.275L21 12l-5.813-1.912a2 2 0 0 1-1.275-1.275L12 3Z"/>
    <path d="M5 3v4"/>
    <path d="M19 17v4"/>
    <path d="M3 5h4"/>
    <path d="M17 19h4"/>
  </svg>
);

const DiamondIcon = ({ size = 20 }: { size?: number }) => (
  <svg width={size} height={size} viewBox="0 0 24 24" fill="none" stroke="currentColor" strokeWidth="2">
    <path d="M6 3h12l4 6-10 12L2 9z"/>
    <path d="m12 22 4-16"/>
    <path d="m8 6 4 16"/>
    <path d="M2 9h20"/>
  </svg>
);

export default function HomePage() {
  const [searchQuery, setSearchQuery] = useState('');
  const [products, setProducts] = useState<Product[]>([]);
  const [categories, setCategories] = useState<Category[]>([]);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState<string | null>(null);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö —Å API
  useEffect(() => {
    const fetchData = async () => {
      try {
        setLoading(true);
        
        // –ó–∞–≥—Ä—É–∂–∞–µ–º –ø—Ä–æ–¥—É–∫—Ç—ã (–ø–µ—Ä–≤—ã–µ 12 –¥–ª—è –≥–ª–∞–≤–Ω–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü—ã)
        const productsResponse = await fetch('/api/products?limit=12');
        // –ú–æ–∂–Ω–æ –≤–µ—Ä–Ω—É—Ç—å featured=true –ø–æ–∑–∂–µ, –∫–æ–≥–¥–∞ —É–±–µ–¥–∏–º—Å—è —á—Ç–æ API —Ä–∞–±–æ—Ç–∞–µ—Ç
        if (!productsResponse.ok) {
          throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –ø—Ä–æ–¥—É–∫—Ç–æ–≤');
        }
        const productsData = await productsResponse.json();
        console.log('üì° –û—Ç–≤–µ—Ç API —Ç–æ–≤–∞—Ä–æ–≤:', productsData);
        
        // –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –¥–∞–Ω–Ω—ã–µ –≤ –Ω—É–∂–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∏ –¥–æ–±–∞–≤–ª—è–µ–º –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è
        const transformedProducts = productsData.products?.map((product: any) => ({
          ...product,
          // –î–æ–±–∞–≤–ª—è–µ–º –Ω–µ–¥–æ—Å—Ç–∞—é—â–∏–µ –ø–æ–ª—è –¥–ª—è –∫—Ä–∞—Å–∏–≤–æ–≥–æ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
          originalPrice: product.Price > 5000 ? product.Price + Math.floor(Math.random() * 3000) : undefined,
          isNew: Math.random() > 0.7, // 30% —Ç–æ–≤–∞—Ä–æ–≤ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ –Ω–æ–≤—ã–µ
          isSale: product.Price < 10000, // –¢–æ–≤–∞—Ä—ã –¥–µ—à–µ–≤–ª–µ 10–∫ –ø–æ–º–µ—á–∞–µ–º –∫–∞–∫ —Ä–∞—Å–ø—Ä–æ–¥–∞–∂–∞
          rating: +(4 + Math.random()).toFixed(1), // –†–µ–π—Ç–∏–Ω–≥ –æ—Ç 4.0 –¥–æ 5.0
          categoryName: product.categoryName || '–û–¥–µ–∂–¥–∞',
        })) || [];
        
        setProducts(transformedProducts);
        console.log('üõçÔ∏è –ó–∞–≥—Ä—É–∂–µ–Ω–æ —Ç–æ–≤–∞—Ä–æ–≤ –Ω–∞ –≥–ª–∞–≤–Ω—É—é —Å—Ç—Ä–∞–Ω–∏—Ü—É:', transformedProducts.length);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
        const categoriesResponse = await fetch('/api/categories');
        if (!categoriesResponse.ok) {
          throw new Error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏–π');
        }
        const categoriesData = await categoriesResponse.json();
        setCategories(categoriesData.categories || []);

      } catch (err) {
        console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö:', err);
        setError(err instanceof Error ? err.message : '–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö');
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π —Å —Ç–æ–≤–∞—Ä–∞–º–∏
  const handleProductAction = async (action: string, product: Product) => {
    console.log(`${action}:`, product);
    
    switch (action) {
      case 'add-to-cart':
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –ª–æ–≥–∏–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É
        try {
          const response = await fetch('/api/cart', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              productSlug: product.slug,
              quantity: 1,
              size: product.sizes?.[0] || 42,
              colorId: 1,
            }),
          });
          if (response.ok) {
            // –ü–æ–∫–∞–∑–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—Ö–µ
            console.log('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω –≤ –∫–æ—Ä–∑–∏–Ω—É');
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –≤ –∫–æ—Ä–∑–∏–Ω—É:', error);
        }
        break;
        
      case 'toggle-favorite':
        // –õ–æ–≥–∏–∫–∞ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ
        try {
          const response = await fetch('/api/favorites', {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
              productSlug: product.slug,
              colorId: 1,
            }),
          });
          if (response.ok) {
            console.log('–¢–æ–≤–∞—Ä –¥–æ–±–∞–≤–ª–µ–Ω/—É–¥–∞–ª–µ–Ω –∏–∑ –∏–∑–±—Ä–∞–Ω–Ω–æ–≥–æ');
          }
        } catch (error) {
          console.error('–û—à–∏–±–∫–∞ —Å –∏–∑–±—Ä–∞–Ω–Ω—ã–º:', error);
        }
        break;
        
      case 'quick-view':
        // –û—Ç–∫—Ä—ã—Ç—å –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ –∏–ª–∏ –ø–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É —Ç–æ–≤–∞—Ä–∞
        window.location.href = `/products/${product.slug}`;
        break;
    }
  };

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–∏—Å–∫–∞
// –ó–∞–º–µ–Ω–∏—Ç—å —Å—Ç–∞—Ä—É—é —Ñ—É–Ω–∫—Ü–∏—é –Ω–∞ —ç—Ç—É:
  const handleSearch = (searchQuery: string) => {
    if (!searchQuery.trim()) return;
    window.location.href = `/search?q=${encodeURIComponent(searchQuery)}`;
  };

  if (loading) {
    return (
      <div style={{
        minHeight: '100vh',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        background: 'var(--color-background)',
      }}>
        <div style={{ textAlign: 'center' }}>
          <div
            className="animate-spin rounded-full h-16 w-16 border-4 border-t-transparent"
            style={{ 
              background: 'var(--gradient-emerald)',
              WebkitMask: 'radial-gradient(circle at center, transparent 50%, black 51%)',
              mask: 'radial-gradient(circle at center, transparent 50%, black 51%)',
              margin: '0 auto 24px',
            }}
          />
          <div style={{
            width: '200px',
            height: '4px',
            background: 'var(--color-border)',
            borderRadius: '2px',
            overflow: 'hidden',
            margin: '0 auto 16px',
          }}>
            <div className="loading-progress" style={{ height: '100%', borderRadius: '2px' }} />
          </div>
          <p style={{ color: 'var(--color-placeholder)', fontSize: '16px', fontWeight: '500' }}>
            –ó–∞–≥—Ä—É–∂–∞–µ–º –∫–æ–ª–ª–µ–∫—Ü–∏—é...
          </p>
        </div>
      </div>
    );
  }

  if (error) {
    return (
      <div style={{
        minHeight: '100vh',
        display: 'flex',
        alignItems: 'center',
        justifyContent: 'center',
        background: 'var(--color-background)',
        padding: '20px',
      }}>
        <Card variant="elevated" style={{ textAlign: 'center', maxWidth: '400px' }}>
          <div style={{ marginBottom: '24px' }}>
            <div style={{
              width: '64px',
              height: '64px',
              background: 'var(--gradient-primary)',
              borderRadius: '50%',
              display: 'flex',
              alignItems: 'center',
              justifyContent: 'center',
              margin: '0 auto 16px',
              opacity: 0.8,
            }}>
              <span style={{ fontSize: '24px' }}>‚ö†Ô∏è</span>
            </div>
            <h2 style={{ color: 'var(--color-error)', marginBottom: '8px', fontSize: '20px', fontWeight: '600' }}>
              –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏
            </h2>
            <p style={{ color: 'var(--color-placeholder)', marginBottom: '24px', lineHeight: '1.5' }}>
              {error}
            </p>
          </div>
          <Button variant="gradient" onClick={() => window.location.reload()}>
            –ü–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —Å–Ω–æ–≤–∞
          </Button>
        </Card>
      </div>
    );
  }

  return (
    <div style={{ minHeight: '100vh', background: 'var(--color-background)' }}>
      {/* –ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –≥–µ—Ä–æ–∏—á–µ—Å–∫–∏–π –±–∞–Ω–Ω–µ—Ä */}
      <section className="hero-gradient" style={{
        position: 'relative',
        padding: '100px 20px 120px',
        overflow: 'visible',
        background: 'var(--gradient-hero)',
        zIndex: 1,
      }}>
        {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å –∞–Ω–∏–º–∞—Ü–∏–µ–π */}
        <div className="animate-float" style={{
          position: 'absolute',
          top: '15%',
          left: '8%',
          width: '120px',
          height: '120px',
          background: 'rgba(52, 211, 153, 0.1)',
          borderRadius: '50%',
          border: '1px solid rgba(52, 211, 153, 0.2)',
        }} />
        <div className="animate-float" style={{
          position: 'absolute',
          top: '50%',
          right: '10%',
          width: '80px',
          height: '80px',
          background: 'rgba(16, 185, 129, 0.15)',
          borderRadius: '30% 70% 70% 30% / 30% 30% 70% 70%',
          animationDelay: '2s',
        }} />
        <div className="animate-float" style={{
          position: 'absolute',
          bottom: '20%',
          left: '15%',
          width: '60px',
          height: '60px',
          background: 'rgba(6, 95, 70, 0.2)',
          borderRadius: '40% 60% 60% 40% / 60% 30% 70% 40%',
          animationDelay: '4s',
        }} />

        <div style={{ maxWidth: '1200px', margin: '0 auto', position: 'relative', zIndex: 1 }}>
          {/* –ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –±–µ–π–¥–∂ */}
          <div style={{
            display: 'inline-flex',
            alignItems: 'center',
            gap: '12px',
            background: 'rgba(255, 255, 255, 0.1)',
            padding: '12px 24px',
            borderRadius: '50px',
            marginBottom: '32px',
            backdropFilter: 'blur(16px)',
            border: '1px solid rgba(255, 255, 255, 0.2)',
            color: 'rgba(255, 255, 255, 0.9)',
          }}>
            <DiamondIcon size={18} />
            <span style={{ fontSize: '14px', fontWeight: '600', letterSpacing: '0.5px' }}>
              PREMIUM COLLECTION 2024
            </span>
          </div>

          {/* –ì–ª–∞–≤–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å –≥—Ä–∞–¥–∏–µ–Ω—Ç–æ–º */}
          <h1 style={{
            fontSize: 'clamp(40px, 8vw, 80px)',
            fontWeight: '900',
            marginBottom: '32px',
            lineHeight: '1.1',
            letterSpacing: '-0.02em',
            textAlign: 'center',
          }}>
            <span style={{ color: '#ffffff' }}>–≠–ª–µ–≥–∞–Ω—Ç–Ω–æ—Å—Ç—å</span>
            <br />
            <span className="text-gradient" style={{
              background: 'linear-gradient(135deg, #059669 0%, #047857 50%, #065f46 100%)',
              WebkitBackgroundClip: 'text',
              WebkitTextFillColor: 'transparent',
              backgroundClip: 'text',
            }}>
              –≤ –∫–∞–∂–¥–æ–π –¥–µ—Ç–∞–ª–∏
            </span>
          </h1>

          <p style={{
            fontSize: '20px',
            marginBottom: '48px',
            opacity: 0.9,
            maxWidth: '700px',
            margin: '0 auto 48px',
            lineHeight: '1.6',
            textAlign: 'center',
            color: 'rgba(255, 255, 255, 0.8)',
            fontWeight: '400',
          }}>
            –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—É—é –∫–æ–ª–ª–µ–∫—Ü–∏—é –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–π –æ–¥–µ–∂–¥—ã –∏ –æ–±—É–≤–∏. 
            –ë–µ–∑—É–ø—Ä–µ—á–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –¥–∏–∑–∞–π–Ω –∏ –Ω–µ–ø—Ä–µ–≤–∑–æ–π–¥–µ–Ω–Ω—ã–π –∫–æ–º—Ñ–æ—Ä—Ç.
          </p>

          {/* –ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–π –ø–æ–∏—Å–∫ */}
            <div style={{
              maxWidth: '600px',
              margin: '0 auto 56px',
              position: 'relative',
            }}>
              <SearchBar 
                placeholder="–ü–æ–∏—Å–∫ –ø—Ä–µ–º–∏–∞–ª—å–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤..."
                variant="hero"
                onSearch={handleSearch}
                showSuggestions={true}
              />
            </div>

          {/* –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π */}
          <div style={{
            display: 'flex',
            gap: '20px',
            justifyContent: 'center',
            flexWrap: 'wrap',
          }}>
            <Button
              variant="outline"
              size="lg"
              onClick={() => window.location.href = '/catalog'}
              className="glass"
              style={{
                background: 'rgba(255, 255, 255, 0.1)',
                border: '1px solid rgba(255, 255, 255, 0.2)',
                color: 'white',
                backdropFilter: 'blur(16px)',
                fontWeight: '600',
                padding: '16px 32px',
              }}
            >
              –ö–∞—Ç–∞–ª–æ–≥
              <ArrowRightIcon size={20} />
            </Button>
            <Button
              variant="ghost"
              size="lg"
              onClick={() => window.location.href = '/popular'}
              style={{
                color: 'rgba(255, 255, 255, 0.9)',
                border: '1px solid rgba(255, 255, 255, 0.2)',
                fontWeight: '600',
                padding: '16px 32px',
              }}
            >
              <TrendingUpIcon size={20} />
              –¢—Ä–µ–Ω–¥—ã
            </Button>
          </div>
        </div>

        {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
        <div style={{
          position: 'absolute',
          bottom: '-50px',
          left: '50%',
          transform: 'translateX(-50%)',
          width: '200px',
          height: '100px',
          background: 'radial-gradient(ellipse, rgba(52, 211, 153, 0.3) 0%, transparent 70%)',
          filter: 'blur(40px)',
        }} />
      </section>

      {/* –û—Å–Ω–æ–≤–Ω–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å –æ–±–Ω–æ–≤–ª–µ–Ω–Ω—ã–º –¥–∏–∑–∞–π–Ω–æ–º */}
      <div style={{ maxWidth: '1600px', margin: '0 auto', padding: '60px 12px' }}>
        
        {/* –°–µ–∫—Ü–∏—è –∫–∞—Ç–µ–≥–æ—Ä–∏–π */}
        {categories.length > 0 && (
          <section style={{ marginBottom: '70px' }}>
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              alignItems: 'center',
              marginBottom: '32px',
            }}>
              <div>
                <div style={{
                  display: 'inline-block',
                  padding: '8px 16px',
                  background: 'var(--gradient-emerald)',
                  borderRadius: '20px',
                  marginBottom: '12px',
                }}>
                  <span style={{ color: 'white', fontSize: '12px', fontWeight: '700', letterSpacing: '1px' }}>
                    –ö–ê–¢–ï–ì–û–†–ò–ò
                  </span>
                </div>
                <h2 style={{
                  fontSize: '36px',
                  fontWeight: '800',
                  color: 'var(--color-text)',
                  marginBottom: '8px',
                  letterSpacing: '-0.01em',
                }}>
                  –í—ã–±–µ—Ä–∏—Ç–µ —Å—Ç–∏–ª—å
                </h2>
                <p style={{
                  color: 'var(--color-placeholder)',
                  fontSize: '18px',
                  fontWeight: '400',
                }}>
                  –û—Ç–∫—Ä–æ–π—Ç–µ –¥–ª—è —Å–µ–±—è –º–∏—Ä –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–π –º–æ–¥—ã
                </p>
              </div>
              <Button 
                variant="outline"
                onClick={() => window.location.href = '/categories'}
                style={{
                  borderColor: 'var(--emerald-500)',
                  color: 'var(--emerald-600)',
                  fontWeight: '600',
                }}
              >
                –í—Å–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
                <ArrowRightIcon size={16} />
              </Button>
            </div>

            <div 
              className="categories-grid"
              style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',
                gap: '16px',
                justifyItems: 'stretch',
                width: '100%',
              }}
            >
              {categories.slice(0, 4).map((category, index) => (
                <Card
                  key={category.slug}
                  variant="elevated"
                  hover
                  padding="none"
                  onClick={() => window.location.href = `/category/${category.slug}`}
                  className="premium-card emerald-accent"
                  style={{
                    cursor: 'pointer',
                    background: 'var(--gradient-surface)',
                    border: '1px solid var(--color-border)',
                    overflow: 'hidden',
                    position: 'relative',
                    height: '200px',
                    width: '100%',
                  }}
                >
                  {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–π –≥—Ä–∞–¥–∏–µ–Ω—Ç */}
                  <div style={{
                    height: '120px',
                    background: `linear-gradient(135deg, var(--emerald-600) 0%, var(--emerald-700) 100%)`,
                    position: 'relative',
                    display: 'flex',
                    alignItems: 'center',
                    justifyContent: 'center',
                  }}>
                    {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
                    <div style={{
                      position: 'absolute',
                      top: '12px',
                      right: '12px',
                      width: '24px',
                      height: '24px',
                      background: 'rgba(255, 255, 255, 0.2)',
                      borderRadius: '50%',
                    }} />
                    <div style={{
                      position: 'absolute',
                      bottom: '12px',
                      left: '12px',
                      width: '12px',
                      height: '12px',
                      background: 'rgba(255, 255, 255, 0.3)',
                      borderRadius: '50%',
                    }} />
                    
                    {/* –ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ */}
                    <div className="glass" style={{
                      padding: '8px 20px',
                      borderRadius: '20px',
                      textAlign: 'center',
                      background: 'rgba(255, 255, 255, 0.15)',
                      backdropFilter: 'blur(12px)',
                      border: '1px solid rgba(255, 255, 255, 0.2)',
                    }}>
                      <span style={{
                        fontWeight: '700',
                        color: '#ffffff',
                        fontSize: '14px',
                        letterSpacing: '0.5px',
                      }}>
                        {category.name}
                      </span>
                    </div>
                  </div>
                  
                  <div style={{ 
                    padding: '16px', 
                    textAlign: 'center',
                    display: 'flex',
                    flexDirection: 'column',
                    justifyContent: 'center',
                    height: '80px',
                  }}>
                    <p style={{
                      color: 'var(--color-placeholder)',
                      fontSize: '12px',
                      fontWeight: '500',
                      marginBottom: '6px',
                    }}>
                      {category.count} —Ç–æ–≤–∞—Ä–æ–≤
                    </p>
                    <div style={{
                      width: '30px',
                      height: '2px',
                      background: 'var(--gradient-emerald)',
                      margin: '0 auto',
                      borderRadius: '1px',
                    }} />
                  </div>
                </Card>
              ))}
            </div>
          </section>
        )}

        {/* –°–µ–∫—Ü–∏—è –ø—Ä–æ–¥—É–∫—Ç–æ–≤ */}
        {products.length > 0 && (
          <section>
            <div style={{
              display: 'flex',
              justifyContent: 'space-between',
              alignItems: 'center',
              marginBottom: '32px',
            }}>
              <div>
                <div style={{
                  display: 'inline-flex',
                  alignItems: 'center',
                  gap: '8px',
                  padding: '8px 16px',
                  background: 'var(--gradient-emerald)',
                  borderRadius: '20px',
                  marginBottom: '12px',
                }}>
                  <SparklesIcon size={14} />
                  <span style={{ color: 'white', fontSize: '12px', fontWeight: '700', letterSpacing: '1px' }}>
                    –ö–û–õ–õ–ï–ö–¶–ò–Ø
                  </span>
                </div>
                <h2 style={{
                  fontSize: '36px',
                  fontWeight: '800',
                  color: 'var(--color-text)',
                  marginBottom: '8px',
                  letterSpacing: '-0.01em',
                }}>
                  –ü—Ä–µ–º–∏–∞–ª—å–Ω—ã–µ —Ç–æ–≤–∞—Ä—ã
                </h2>
                <p style={{
                  color: 'var(--color-placeholder)',
                  fontSize: '18px',
                  fontWeight: '400',
                }}>
                  –°–∞–º—ã–µ –≤–æ—Å—Ç—Ä–µ–±–æ–≤–∞–Ω–Ω—ã–µ –ø–æ–∑–∏—Ü–∏–∏ —Å–µ–∑–æ–Ω–∞
                </p>
              </div>
              <Button 
                variant="gradient"
                onClick={() => window.location.href = '/catalog'}
                style={{
                  background: 'var(--gradient-button)',
                  fontWeight: '600',
                  boxShadow: 'var(--shadow-emerald)',
                }}
              >
                –°–º–æ—Ç—Ä–µ—Ç—å –≤—Å–µ
                <ArrowRightIcon size={16} />
              </Button>
            </div>

            <div 
              className="products-grid-compact"
              style={{
                display: 'grid',
                gridTemplateColumns: 'repeat(auto-fit, minmax(240px, 1fr))',
                gap: '18px',
                justifyItems: 'stretch',
                width: '100%',
              }}
            >
              {products.map((product) => (
                <ProductCard
                  key={product.slug}
                  product={{
                    slug: product.slug,
                    Name: product.Name,
                    Price: product.Price,
                    imageUrl: product.imageUrl,
                    brandName: product.brandName,
                    colors: product.colors,
                    sizes: product.sizes,
                    genders: product.genders,
                    categoryName: product.categoryName,
                    originalPrice: product.originalPrice,
                    isNew: product.isNew,
                    isSale: product.isSale,
                    rating: product.rating,
                  }}
                  size="standard"
                  showQuickActions
                  onAddToCart={(product: any) => handleProductAction('add-to-cart', product)}
                  onToggleFavorite={(product: any) => handleProductAction('toggle-favorite', product)}
                  onQuickView={(product: any) => handleProductAction('quick-view', product)}
                />
              ))}
            </div>
          </section>
        )}

        {/* –ü—Ä–µ–º–∏–∞–ª—å–Ω–∞—è CTA —Å–µ–∫—Ü–∏—è */}
        <section style={{
          marginTop: '70px',
          padding: '50px 24px',
          background: 'var(--gradient-surface)',
          borderRadius: '20px',
          textAlign: 'center',
          position: 'relative',
          overflow: 'hidden',
          border: '1px solid var(--color-border)',
        }}>
          {/* –î–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã */}
          <div className="animate-float" style={{
            position: 'absolute',
            top: '-100px',
            right: '-100px',
            width: '300px',
            height: '300px',
            background: 'var(--gradient-emerald)',
            borderRadius: '50%',
            opacity: 0.1,
            filter: 'blur(60px)',
          }} />
          <div className="animate-float" style={{
            position: 'absolute',
            bottom: '-50px',
            left: '-50px',
            width: '200px',
            height: '200px',
            background: 'var(--gradient-emerald)',
            borderRadius: '50%',
            opacity: 0.08,
            filter: 'blur(40px)',
            animationDelay: '3s',
          }} />
          
          <div style={{ position: 'relative', zIndex: 1 }}>
            <div style={{
              display: 'inline-flex',
              alignItems: 'center',
              gap: '12px',
              padding: '12px 24px',
              background: 'var(--gradient-emerald)',
              borderRadius: '30px',
              marginBottom: '24px',
            }}>
              <DiamondIcon size={16} />
              <span style={{ color: 'white', fontSize: '12px', fontWeight: '700', letterSpacing: '1px' }}>
                –≠–ö–°–ö–õ–Æ–ó–ò–í
              </span>
            </div>
            
            <h3 style={{
              fontSize: '42px',
              fontWeight: '800',
              color: 'var(--color-text)',
              marginBottom: '16px',
              letterSpacing: '-0.01em',
            }}>
              –°—Ç–∞–Ω—å—Ç–µ —á–∞—Å—Ç—å—é —Å–æ–æ–±—â–µ—Å—Ç–≤–∞
            </h3>
            <p style={{
              fontSize: '20px',
              color: 'var(--color-placeholder)',
              marginBottom: '40px',
              maxWidth: '600px',
              margin: '0 auto 40px',
              lineHeight: '1.6',
              fontWeight: '400',
            }}>
              –ü–æ–ª—É—á–∞–π—Ç–µ —ç–∫—Å–∫–ª—é–∑–∏–≤–Ω—ã–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è, –ø–µ—Ä–≤—ã–º–∏ —É–∑–Ω–∞–≤–∞–π—Ç–µ –æ –Ω–æ–≤—ã—Ö –∫–æ–ª–ª–µ–∫—Ü–∏—è—Ö 
              –∏ –ø–æ–ª—É—á–∏—Ç–µ —Å–∫–∏–¥–∫—É 15% –Ω–∞ –ø–µ—Ä–≤—ã–π –∑–∞–∫–∞–∑
            </p>
            
            <div style={{
              display: 'flex',
              gap: '16px',
              maxWidth: '500px',
              margin: '0 auto',
              flexWrap: 'wrap',
              justifyContent: 'center',
            }}>
              <input
                type="email"
                placeholder="–í–∞—à email –∞–¥—Ä–µ—Å"
                style={{
                  flex: 1,
                  minWidth: '280px',
                  padding: '18px 24px',
                  border: '1px solid var(--color-border)',
                  borderRadius: '16px',
                  fontSize: '16px',
                  outline: 'none',
                  transition: 'all 0.3s ease',
                  background: 'var(--color-card)',
                  color: 'var(--color-text)',
                  fontWeight: '500',
                }}
                onFocus={(e) => {
                  e.target.style.borderColor = 'var(--emerald-500)';
                  e.target.style.boxShadow = '0 0 0 3px rgba(16, 185, 129, 0.1)';
                  e.target.style.transform = 'translateY(-2px)';
                }}
                onBlur={(e) => {
                  e.target.style.borderColor = 'var(--color-border)';
                  e.target.style.boxShadow = 'none';
                  e.target.style.transform = 'translateY(0)';
                }}
              />
              <Button 
                variant="gradient" 
                size="lg"
                style={{
                  background: 'var(--gradient-button)',
                  fontWeight: '600',
                  padding: '18px 32px',
                  borderRadius: '16px',
                  boxShadow: 'var(--shadow-emerald)',
                }}
              >
                –ü–æ–¥–ø–∏—Å–∞—Ç—å—Å—è
              </Button>
            </div>

            {/* –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
            <div style={{
              marginTop: '32px',
              display: 'flex',
              justifyContent: 'center',
              alignItems: 'center',
              gap: '24px',
              flexWrap: 'wrap',
            }}>
              <div style={{
                display: 'flex',
                alignItems: 'center',
                gap: '8px',
                color: 'var(--color-placeholder)',
                fontSize: '14px',
              }}>
                <div style={{
                  width: '8px',
                  height: '8px',
                  background: 'var(--emerald-500)',
                  borderRadius: '50%',
                }} />
                –ë–µ—Å–ø–ª–∞—Ç–Ω–∞—è –¥–æ—Å—Ç–∞–≤–∫–∞ –æ—Ç 5000‚ÇΩ
              </div>
              <div style={{
                display: 'flex',
                alignItems: 'center',
                gap: '8px',
                color: 'var(--color-placeholder)',
                fontSize: '14px',
              }}>
                <div style={{
                  width: '8px',
                  height: '8px',
                  background: 'var(--emerald-500)',
                  borderRadius: '50%',
                }} />
                –ì–∞—Ä–∞–Ω—Ç–∏—è –∫–∞—á–µ—Å—Ç–≤–∞
              </div>
              <div style={{
                display: 'flex',
                alignItems: 'center',
                gap: '8px',
                color: 'var(--color-placeholder)',
                fontSize: '14px',
              }}>
                <div style={{
                  width: '8px',
                  height: '8px',
                  background: 'var(--emerald-500)',
                  borderRadius: '50%',
                }} />
                –í–æ–∑–≤—Ä–∞—Ç 30 –¥–Ω–µ–π
              </div>
            </div>
          </div>
        </section>

        {/* –°–µ–∫—Ü–∏—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ */}
        <section style={{
          marginTop: '60px',
          padding: '40px 0',
          borderTop: '1px solid var(--color-border)',
          borderBottom: '1px solid var(--color-border)',
        }}>
          <div style={{
            display: 'grid',
            gridTemplateColumns: 'repeat(auto-fit, minmax(160px, 1fr))',
            gap: '24px',
            textAlign: 'center',
          }}>
            <div>
              <div style={{
                fontSize: '36px',
                fontWeight: '800',
                color: 'var(--emerald-600)',
                marginBottom: '8px',
              }}>
                10K+
              </div>
              <p style={{
                color: 'var(--color-placeholder)',
                fontSize: '16px',
                fontWeight: '500',
              }}>
                –î–æ–≤–æ–ª—å–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–æ–≤
              </p>
            </div>
            <div>
              <div style={{
                fontSize: '36px',
                fontWeight: '800',
                color: 'var(--emerald-600)',
                marginBottom: '8px',
              }}>
                500+
              </div>
              <p style={{
                color: 'var(--color-placeholder)',
                fontSize: '16px',
                fontWeight: '500',
              }}>
                –ë—Ä–µ–Ω–¥–æ–≤ –≤ –∫–∞—Ç–∞–ª–æ–≥–µ
              </p>
            </div>
            <div>
              <div style={{
                fontSize: '36px',
                fontWeight: '800',
                color: 'var(--emerald-600)',
                marginBottom: '8px',
              }}>
                98%
              </div>
              <p style={{
                color: 'var(--color-placeholder)',
                fontSize: '16px',
                fontWeight: '500',
              }}>
                –ü–æ–ª–æ–∂–∏—Ç–µ–ª—å–Ω—ã—Ö –æ—Ç–∑—ã–≤–æ–≤
              </p>
            </div>
            <div>
              <div style={{
                fontSize: '36px',
                fontWeight: '800',
                color: 'var(--emerald-600)',
                marginBottom: '8px',
              }}>
                24/7
              </div>
              <p style={{
                color: 'var(--color-placeholder)',
                fontSize: '16px',
                fontWeight: '500',
              }}>
                –ü–æ–¥–¥–µ—Ä–∂–∫–∞ –∫–ª–∏–µ–Ω—Ç–æ–≤
              </p>
            </div>
          </div>
        </section>
      </div>

      {/* CSS –∞–Ω–∏–º–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–µ–º–∏–∞–ª—å–Ω–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞ */}
      <style jsx>{`
        @keyframes float {
          0%, 100% { 
            transform: translateY(0px) rotate(0deg); 
          }
          50% { 
            transform: translateY(-20px) rotate(3deg); 
          }
        }

        @keyframes gradient-shift {
          0% {
            background-position: 0% 50%;
          }
          50% {
            background-position: 100% 50%;
          }
          100% {
            background-position: 0% 50%;
          }
        }

        @keyframes shimmer {
          0% {
            transform: translateX(-100%);
          }
          100% {
            transform: translateX(100%);
          }
        }

        .hero-gradient {
          background: var(--gradient-hero);
          background-size: 400% 400%;
          animation: gradient-shift 20s ease infinite;
        }

        .text-gradient {
          background: linear-gradient(135deg, #34d399 0%, #6ee7b7 50%, #a7f3d0 100%);
          -webkit-background-clip: text;
          -webkit-text-fill-color: transparent;
          background-clip: text;
        }

        .glass {
          background: rgba(255, 255, 255, 0.1);
          backdrop-filter: blur(16px);
          border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .premium-card {
          transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .premium-card:hover {
          transform: translateY(-8px);
          box-shadow: var(--shadow-emerald-lg);
        }

        .emerald-accent:hover {
          box-shadow: var(--shadow-emerald-lg);
        }

        /* –ê–¥–∞–ø—Ç–∏–≤–Ω–æ—Å—Ç—å */
        @media (max-width: 640px) {
          .hero-gradient {
            padding: 50px 12px 70px;
          }
          
          h1 {
            font-size: clamp(28px, 6vw, 48px) !important;
          }
          
          .glass {
            flex-direction: column;
            gap: 16px;
          }
          
          .glass input {
            padding: 16px 24px;
          }
          
          .products-grid-compact {
            grid-template-columns: 1fr !important;
            gap: 14px !important;
          }
          
          .categories-grid {
            grid-template-columns: 1fr !important;
            gap: 12px !important;
          }
          
          .container {
            padding: 50px 8px !important;
          }
        }

        @media (min-width: 641px) and (max-width: 768px) {
          .products-grid-compact {
            grid-template-columns: repeat(2, 1fr) !important;
            gap: 16px !important;
          }
          
          .categories-grid {
            grid-template-columns: repeat(2, 1fr) !important;
            gap: 14px !important;
          }
        }

        @media (min-width: 769px) and (max-width: 1024px) {
          .products-grid-compact {
            grid-template-columns: repeat(3, 1fr) !important;
            gap: 18px !important;
          }
          
          .categories-grid {
            grid-template-columns: repeat(4, 1fr) !important;
            gap: 16px !important;
          }
        }

        @media (min-width: 1025px) and (max-width: 1200px) {
          .products-grid-compact {
            grid-template-columns: repeat(3, 1fr) !important;
            gap: 18px !important;
          }
          
          .categories-grid {
            grid-template-columns: repeat(4, 1fr) !important;
            gap: 16px !important;
          }
        }

        @media (min-width: 1201px) and (max-width: 1400px) {
          .products-grid-compact {
            grid-template-columns: repeat(4, 1fr) !important;
            gap: 18px !important;
          }
          
          .categories-grid {
            grid-template-columns: repeat(4, 1fr) !important;
            gap: 16px !important;
          }
        }

        @media (min-width: 1401px) {
          .products-grid-compact {
            grid-template-columns: repeat(5, 1fr) !important;
            gap: 20px !important;
          }
          
          .categories-grid {
            grid-template-columns: repeat(4, 1fr) !important;
            gap: 16px !important;
          }
        }
      `}</style>
    </div>
  );
}